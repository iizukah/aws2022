# AWS認定 高度なネットワーキング-専門知識

## 2章 AWSネットワークの設計と実装
### 2-1 AWSのグローバルインフラストラクチャ
* リージョン:AWSがサービスを提供している拠点エリア。
    * リージョン同士は各々地理的に離れた場所に配置され、完全に独立している。
    * AWSサービスは基本的に、リージョンごとに独立して提供される。
    * リージョン間は高速で高帯域幅のNWで接続され、データは物理レイヤで自動暗号化されている。

---

* Availability Zone(AZ):1つ以上の近接したデータセンター群。各リージョンは複数のAZから成る。
    * 各々のAZは地理的・電源的・NW的に他のAZから独立している(数十キロ程度離れて配置)。
    * リージョン内AZ間は高速な専用線で接続されている。AZ間のレイテンシは普通2ms以下。
    * 一つのAZへの局所的な障害は、別のAZに影響を与えない。
* マルチAZ構成:複数AZを利用してシステムを構築すること。高可用性・高耐障害性を実現し、信頼性の高いシステムを構築できる。

---

* エッジロケーション:エンドユーザに物理的に近い場所でコンテンツ配信が可能な接続ポイント。リージョンとは別に200以上存在する。
    * CloudFrontなどのエッジサービスで利用。

---

* Amazon Virtual Private Cloud(VPC):ユーザのプライベートなAWS上ネットワーク空間。
    * 作成時、IPv4のNWアドレス範囲をCIDR指定。
    * VPCは単一リージョン内に構成され、リージョン内の全AZに展開される。
    * VPC内にはサブネットを構成し、サブネットの中にEC2インスタンスなどのリソースを作成する。
    * サブネットはVPCのCIDR範囲内からNWアドレス範囲をCIDR指定で割当、単一AZ内に構成される。 
    * 1つのVPC内に複数のサブネットを作成可能。

---

* VPCとサブネットに対するIPアドレス割当
    * IPアドレス範囲は/28以上/16以下で自由に決定できる。
    * VPCのIPアドレスが不足した場合は、セカンダリのCIDRブロックを追加可能。
        * プライマリCIDRブロックの範囲と被るブロックは指定不可能。
        * RFC1918のIPアドレス範囲に、他のRFC1918範囲を追加することはできない。
        * 例：192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12、など。

---

* サブネットの予約IPアドレス:以下は使用不可。サブネットのCIDRブロックが10.0.0.0/24の場合。
    * 10.0.0.0:NWアドレス。
    * 10.0.0.1:VPCルータ用。
    * 10.0.0.2:DNSサーバ用。
    * 10.0.0.3:将来利用の予約。
    * 10.0.0.255:BCアドレス。
* IPv6CIDRブロックの割当
    * IPV6ブロックは、VPCのIPv4ブロックに追加割当可能。IPv6単独でVPCの利用は不可能。
    * IPV6のCIDRブロックサイズは/56固定。サブネットは/64固定。

---

* DHCP:サブネット内のElastic Network Interface(ENI)にIPアドレスを自動割当する。
    * EC2インスタンスなどのリソースはENIをアタッチすることでサブネットに接続する。
* DHCPオプションセット
    * IPアドレスなど、VPCのDHCP機能によって配布される情報の構成。
    * DHCPオプションセットはVPCに関連付けて使用。
    * 既定・作成済のオプションセットは変更不可能。設定変更には新規作成が必要。

---

* DHCPオプションセットの設定項目
    * DNSサーバー:最大4つのDNSサーバーのIPアドレスを指定可能。既定では「Route53 Resolver(Amazon Provided DNS」。
    * カスタムドメイン名:EC2インスタンスのDNSドメイン名指定。
    * NTPサーバー:最大4つのNTPサーバーアドレス。既定未設定。
    * NetBIOSネームサーバー・NetBIOSノードタイプ:既定未設定。

---

* DNS
    * 各VPCではDNSサーバーとしてRoute53 Resolver(Amazon Provided DNS)を提供。
    * Provided DNSによってVPC内のDNSゾーンとインターネット上のパブリックDNSゾーンの名前解決が可能。
    * DNSクエリを受理するエンドポイントのIPアドレスは2つある。
        * 169.254.169.253。
        * VPCのNWアドレスに2を加えたアドレス。たとえばVPCのCIDRが10.0.0.0./24なら10.0.0.2。

---

* セキュリティグループ:VPCにおける仮想ファイアウォール機能。
    * ENIに適用。したがってEC2インスタンスごとに通信制御可能。
    * インバウンド/アウトバウンド各々に対して許可ルールを定義。拒否ルール不可。明示的に許可されていない通信は拒否される。
    * インバウンド/アウトバウンドルール:許可プロトコル、ポート番号/範囲、送信元/先を定義。送信元/先はIPv4/v6のIPアドレス・CIDR範囲および別のセキュリティグループ。
    * 既定ではインバウンドルール無、アウトバウンドルール全許可。
    * セキュリティグループはステートフル。戻りの通信を許可する必要はない。

---

* ネットワークアクセルコントロールリスト(ネットワークACL):サブネットに適用するファイアウォール機能。
    * サブネット内リソースに一律に適用される。
    * 1つのサブネットにつき1つのACLを適用可能。複数サブネットに同じACLを適用可能。
    * 許可ルールと拒否ルールを定義。
    * ルールには番号が付与され、若い番号から順に評価され、一致次第許可・拒否。暗黙のdeny。
    * インバウンド/アウトバウンドルール:プロトコル、ポート番号/範囲、送信元/先、許可・拒否を定義。送信元/先はIPv4/v6IPアドレス・CIDRブロックを指定。
    * 既定ではインバウンド・アウトバウンドともに全許可。
    * ACLはステートレス。そのため戻りの通信も設定する必要がある。

---

* ルートテーブル:VPCにおける通信経路制御機能。
    * 送信先とそれに対するターゲットをルートとして定義する。
    * ルートテーブルはサブネットに関連付けられる。1つのサブネットには1つだけルートテーブルが関連付けられる。逆に1つのルートテーブルは複数サブネットに関連付け可能。
    * ローカルルート(target:local):デフォルトでVPC無いルーティングを有効にするルート。
    * 複数ルートを登録可能。ロンゲストマッチで評価。
    * メインルートテーブル:ルートテーブルの明示的な関連付けがないサブネットへ自動的にサブネットに適用されるルートテーブル。編集・再作成などが可能。

---

* ゲートウェイ:VPC外と通信するためのターゲット。原則、ゲートウェイはインターフェイスとのみ通信可能。ゲートウェイ同士の通信は不可能。インターフェイスとインターフェイス同士は可能。
* インターネットゲートウェイ(IGW):VPCからインターネットに接続するためのゲートウェイ。VPCに1つだけアタッチして使用。
    * インスタンスのプライベート/パブリックIPアドレスのNAT機能も提供。
    * 冗長化・スケーリングはAWS管理。
    * ふつう、ルートテーブルでは0.0.0.0/0宛に設定する。
* パブリックサブネットとプライベートサブネット:IGWへのルートをもつサブネットはパブリックサブネット、もたないサブネットはプライベートサブネットと呼ばれる。

---

* NATゲートウェイ:一方向NAT機能を提供するゲートウェイ。
    * プライベートサブネット内のインスタンスからインターネット(など)に接続可能で、逆はできない状態を実現できる。
    * サブネット内に作成される(ふつうはパブリックサブネット、したがってIGWの存在が必須)。冗長化のためにはマルチAZ構成が推奨される。
    * プライベートサブネットのルートテーブルには、NATゲートウェイをターゲットとするルートを追加する。
    * ElasticIPを関連付けて使用する。ンスタンスのプライベートIPアドレスがElasticIPに変換される。
    * インターネットではなくDirect Connect経由でオンプレへの中継として使用することも可能。

---

* Egress-Onlyインターネットゲートウェイ:Ipv6アドレスを用いた一方向NAT機能を提供するゲートウェイ。
    * VPC内からインターネットにアクセスできるが、逆はできないという仕組みを実現。ステートフルなため戻りの通信は可能。
* 仮想プライベートゲートウェイ(VGW):IPssec VPN接続やDirect Connect接続に利用されるVPC側のゲートウェイ。VPCにアタッチして使用する。

---

* ゲートウェイ型VPCエンドポイント:VPCにアタッチして使用。プライベート内のインスタンスからインターネットを経由せずにDynamoDB/S3に接続可能。
    * 送信先の指定はS3/DynamoDBの「プリフィックスリスト(AWS管理のパブリックIPアドレス範囲一覧)」を使用する。
* VPCピアリング:2つのVPC間の接続。
    * サブネットのルートテーブルに、ターゲットをピアリング接続とするルートを定義。
    * 推移的接続不可能。VPC A-B, B-Cがピアリングされていても、A-C間は接続されない。

---

* VPCエンドポイント:インターネットを経由せずにプライベートサブネットとAWSサービスを接続する仕組み。2タイプ存在する。
* ゲートウェイ型VPCエンドポイント:ゲートウェイとしてVPCにアタッチし、ルートテーブルのターゲットとして指定されるタイプ。DynamoDBとS3のみサポート。
    * VPCにアタッチされるためマルチAZ構成。
    * エンドポイントポリシーの設定が必要。またバケットポリシー側には"aws:SourceVpce":"Vpce-xxx"などの条件を記述し、VPCエンドポイント経由のアクセスのみを許可する。
    * VPC外からは利用不可能。

---

* インターフェイス型VPCエンドポイント:サブネット内ENIとして構成され、そのプライベートIPアドレスからAWSサービスに接続するタイプ。DynamoDB以外のVPCエンドポイント対応サービスがサポート(S3は両方対応)。
    * マルチAZ構成はユーザ側で行う必要がある。
    * ENIが実体なので、VPCないからローカルルートで到達可能。
    * セキュリティグループの割当が必要。
    * サービス共通の内部DNS名が割り当てられていて、接続元はこのDNS名を名前解決することでエンドポイントを利用する(Amazon Provided DNSが名前解決を行う)。
    * エンドポイントポリシーに対応しているサービスもある。
 
 ---

* インターフェイス型VPCエンドポイント(Cont.)
    * プライベートDNS名が名前解決可能であればVPC外からも利用可能。たとえばオンプレ環境からDirect Connect経由でインターフェイス型VPCエンドポイントを利用可能。

---

* EC2インスタンスにおけるネットワーク
* プライマリネットワークインターフェイス:EC2インスタンス起動時に必ずアタッチされるENI。
* EC2インスタンスはENIによってサブネットと接続する。
    * ENIは一つのEC2インスタンスに複数アタッチ可能。
    * セキュリティグループはENIごとの割当。
    * プライマリネットワークインターフェイスと同一AZ内の異なるサブネットのENIをアタッチ可能。

---

* EC2インスタンスにおけるネットワーク(Cont.)
* プライベートIPアドレス:サブネットのアドレス範囲から手動または自動で決定されるIPアドレス。
    * VPC内リソースにのみアクセス可能。
    * 停止・起動しても不変。
    * ENIが割り当てるので、OS上のネットワーク設定での変更はしてはならない。
    * 一つのENIに複数のプライベートIPアドレスを割当可能。

---

* EC2インスタンスにおけるネットワーク(Cont.)
* パブリックIPアドレス:インターネットにアクセス可能なIPアドレス。
    * サブネット設定で自動割当有効化するか、インスタンス起動時に有効にする。
    * AWS所有IPアドレスプールから一時的に貸与される。
    * インスタンスを停止・休止・終了するとアドレスは解放され、再利用不可になる。

---

* EC2インスタンスにおけるネットワーク(Cont.)
* Elastic IPアドレス:固定パブリックIPアドレス。
    * AWSアカウントに割り当てられ、明示的開放操作をしない限り使用可能。
    * EC2インスタンスに割り当てて使用する。
    * インスタンスに関連付けられていない、もしくは関連付けられているインスタンスが停止しているなどの状況で課金が発生する。

---

* EC2インスタンスにおけるネットワーク(Cont.)
* インスタンス情報の取得:インスタンス内から"http://169.254.169.254/latest/meta-data/"にアクセスすると、インスタンスのメタデータを取得可能。
    * インスタンスIDやインスタンスタイプなどを取得できる。
    * IAMロール(インスタンスプロファイル)が関連付けられているEC2インスタンスからAWS CLIなどを実行する際、認証情報はインスタンスメタデータから取得する。
* EBS最適化:EBSのI/O用に専用の独立NW帯域を割り当て、他のトラフィックと競合しないようにする。デフォルトで有効化されている。

---

* EC2インスタンスにおけるネットワーク(Cont.)
* ネットワークのパフォーマンス:EC2で利用可能なNW帯域幅はインスタンスタイプ依存。
    * ベースライン帯域幅をこえて帯域が必要となった場合、一定時間、バースト帯域幅までベストエフォートでバースト。
    * インスタンスには起動時にネットワークI/Oクレジットが付与され、そのクレジットを消費して帯域をバーストする。ベースライン帯域幅よりも帯域利用が少ない場合、クレジットは蓄される。
* Elastic Network Adapter(ENA):拡張ネットワーキング。最大100Gbpsのネットワーク速度を実現可能。

---

* EC2インスタンスにおけるネットワーク(Cont.)
* プレイスメントグループ:HPC用途でEC2インスタンス間通信を低レイテンシに保つためのグループ。
    * クラスタ戦略:インスタンスの物理的密接配置グループ。高帯域・低遅延。グループ内インスタンスは同じAZに属する。
    * スプレッド戦略:EC2インスタンス同士を別の物理ラックに配置する。異なるAZのインスタンスを含めることが可能。ラック共有による同時障害リスクを低減。
    * パーティション戦略:複数のパーティション(物理ラックの論理的単位)に複数C2インスタンスを配置する。複数AZでも可。単一HD障害の影響をパーティション内に制限できる。


### 2-2 AWSネットワークを設計し、実装する まとめ

## 3章 大規模なハイブリッドITネットワークアーキテクチャの設計と実装
### 3-1 オンプレミスとAWSの連携

* オンプレミスとAWSの接続方式
* インターネット経由の接続
    * 品質とセキュリティが問題ない場合に使用。安価。S3などのエンドポイント公開サービスを利用可能。
    * 典型的な設定方法
        * VPCにIGWをアタッチ。EC2にパブリックIPアドレス/Static IPアドレスを付与。
        * ルートテーブルの設定。
        * セキュリティグループの設定。

---

* VPN接続
    * VPN(Virtual Private Network)による接続。
    * AWSサイト間(Site to Site)VPNとAWSクライアントVPNがある。
    * 必要アプリをインストールしたEC2や、マーケットプレイスのソフトウェアアプライアンス製品を利用した方法もある。
    * ユースケース
        * 安価な閉域接続。品質の劣化が或る程度許容できる場合。
        * 個々のリモートユーザからの接続。
* Direct Connect接続:専用線接続
    * サイト間通信用途で安定したスループットを実現。
    * 多数のVPCと接続可能。

### 3-2 VPNとは

* VPN:既存のインターネット回線を利用したセキュアな接続。
    * 専用設備が不要なため比較的安価。
    * インターネットを利用するため帯域や性能の保証はない。
* サイト-サイト間(Site to Site)VPN:拠点間VPN。
    * オンプレデータセンタ・オフィスとVPCを接続する。
* クライアント-サイト間VPN:リモートユーザが自宅や外出先からVPCに接続。

---

* AWSマネージドサービスのVPN:AWSサイト間VPNとAWSクライアントVPNが存在。
    * 運用管理が不要
    * 必要な帯域や接続数の見積が難しく、オンデマンドで使用したい場合向け。
* EC2を利用したVPN:必要アプリをインストールしたEC2や、マーケットプレイスのソフトウェアアプライアンス製品を利用。
    * クライアント-サイト間VPNの利用(AWSクライアントVPN登場以前の手段)
    * IPsec以外のプロトコル利用。
    * DLP/IPS機能の利用。

---

* AWSサイト間VPNの実装
1. Virtual Private Gatway(VGW)を作成し、VPCにアタッチ。VGWはマルチAZでVPCに1つだけアタッチ可能なゲートウェイ(「TransitVPC構成」などでは「デタッチ状態のVGW」が役立つ)。
2. VGWの設定:プライベートAS番号範囲から任意番号設定(デフォルト64512)。
3. ルートテーブルで送信先にオンプレNWアドレス、ターゲットにVGWを指定。

---

* AWSサイト間VPNの実装(Cont.)
4. Customer Gateway(CGW):VGWに接続するオンプレNW機器。HW機器でも仮想的SWでもよい。
    * BGPの動的ルーティング、または静的ルーティングが可能。
    * IPアドレスはCGWのグローバルIPアドレス。※Direct Connectの場合、CGWの定義は不要で、代わりに仮想インターフェイスを作成する。
    * IPプロトコル50(ESP)、UDPポート番号500(ISAKMP)を使用する。

---

* AWSサイト間VPNの実装(Cont.)
5. VPN Connection(VPN接続):VGWとCGWの接続。
    * AWSサイト間VPNにおいて、2つのグローバルIPアドレスが示され、2つのVPNトンネルを構成することで冗長化構成をとる。
    * Active・Active構成で使用すると、「非対称ルーティング」問題が発生する(通信の往復で異なるトンネルを通過する)。これを許可しなかったり、明示的に許可する必要のある機器が存在する。
    * ASパスプリペンドやMED値によっていずれかのトンネルを優先的に使用するか指定可能。
    * 複数トンネルを使用するECMPは、VGWによるVPNでは使用不可(トランジットGWを使用すれば可能)。
---

* CGW機器の満たすべき仕様
    * Pre-Sharedキーを使用してIKE Security Associationを確立する。
    * TunnelモードでIPsec Security Associationを確立する。
    * AES128bit,256bit,128bitGCM-16,または256-GCM-16暗号化機能を利用する。
    * SHA-1, SHA-2(256), SHA2(384)またはSHA2(512)のハッシュ関数を利用する。
    * 「グループ2」モード、またはAWSサポートの追加DHグループの1つでDH Perfect Forward Secrecyを使用する。
    * 暗号化前のパケットの断片化を実行する。

---

* CGW機器の満たすべき仕様(Cont.)
* 動的ルーティングを使用するAWSサイト間VPN接続をサポートする装置の場合、以下も追加。
    * BGPピア接続を確立する。
    * トンネルを論理インターフェイス(ルートベースのVPN)にバインドする。
    * IPsecデッドピア検出の利用。

---

* VPNで接続可能なAWSリソース
    * VGWがアタッチしているVPC内のEC2、RDS、VPC接続可能Lambda、インターフェイス型VPCエンドポイントなど。
* VPNで直接通信できないリソース
    * IGWなどの他のゲートウェイ。
    * VPC内のDNS用IPアドレス。
    * S3などのパブリックIPアドレスでアクセスするサービス。
* AWSサイト間VPNのメトリクス:TunnelState, TunnelDataIn, TunnelDataOutなど。
* VPNトンネルの最大性能は1.25Gbps。

---

* コストは送信データ量+トンネルごとに0.05USD/h。
* そのほかの注意点
    * VGWはIPsec接続を開始しない:CGWからの接続を待ち受けるだけ(したがってまたVGW同士の接続は不可能)。
    * トンネルのキープアライブのためにDPD(Dead peer Detection)を使用する:VGWは10秒間無通信を検知すると、DPDの「R-U-Thereメッセージ」を送信。3回応答がなければトンネルを遮断する。
* VPN CloudHub:(VPN、DirectConnect問わず)複数オンプレなどのハブとしてVGWが機能すること。VGWは複数VPN接続が可能である特性から。2022年1月時点での最大接続数は10、緩和申請可。ただし将来的には別のサービスに置換される可能性がある。 

---

* AWSクライアントVPN:クライアント-サイト間VPNのマネージドサービス。
    * OpenVPNベースのクライアントを利用したTLS接続。
    * 認証は証明書またはActive Directoryを利用可能。
    * VGWではなく「クライアントVPNエンドポイント」を利用する。インターフェイス型。
    * クライアントに割り振るアドレスはCIDRブロックとしてプールされる。

---

* EC2にVPNソフトウェアを実装する
    * インラインゲートウェイ:2点間通信の間に入り込んでゲートウェイとして機能させる方式。
    * VPNソフトウェア実装EC2はインラインゲートウェイとして動作する。
    * ルートテーブルでは、オンプレNWアドレスのターゲットとして該当EC2を指定する。
    * 該当EC2インスタンスからはインターネット経由。
    * モニタリングはCloudWatchやPingなど。
    * 冗長性確保はルートテーブル書き換えやDNS使用など。
    * 期待性能は2～2.5Gbps。



## 4章 アプリケーションサービスとネットワークの連携の構築
### 4-1 Amazon Route 53
### 4-2 Elastic Load Balancing
### 4-3 CloudFront
### 4-4 Lambda@Edge
### 4-5 ネットワーク経路の暗号化
### 4-6 Private IPでの通信のデザインパターン
### 4-7 アプリケーションサービスとネットワークの連携を構築する まとめ

## 5章 AWSタスクのオートメーション
### 5-1 AWSタスクのオートメーション
### 5-2 AWS CloudFormation
### 5-3 AWS Service Catalog
### 5-4 AWS Command Line Interface(AWS CLI)
### 5-5 APIとSDK
### 5-6 AWS Config
### 5-7 AWSタスクのオートメーション まとめ

## 6章 セキュリティとコンプライアンスの設計と実装、ネットワークの管理・最適化・トラブルシューティング
### 6-1 セキュリティとコンプライアンスを設計し、実装する
### 6-2 ネットワークの管理・最適化・トラブルシューティングを行う
### 6-3 セキュリティとコンプライアンスの設計と実装、ネットワークの管理・最適化・トラブルシューティング まとめ
